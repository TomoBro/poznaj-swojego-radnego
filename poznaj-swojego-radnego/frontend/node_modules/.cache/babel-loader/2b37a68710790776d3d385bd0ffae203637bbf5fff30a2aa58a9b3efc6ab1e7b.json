{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { supabase } from '../../supabaseClient';\nexport const fetchRadni = createAsyncThunk('radni/fetchRadni', async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('radni').select('*');\n  if (error) {\n    throw error;\n  }\n  return data;\n});\nconst radniSlice = createSlice({\n  name: 'radni',\n  initialState: {\n    radni: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRadni.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchRadni.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.radni = action.payload;\n    }).addCase(fetchRadni.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default radniSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","supabase","fetchRadni","data","error","from","select","radniSlice","name","initialState","radni","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/tomek/Documents/Poznaj_swojego_radnego/poznaj-swojego-radnego/frontend/src/features/radni/radniSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { supabase } from '../../supabaseClient';\n\nexport const fetchRadni = createAsyncThunk('radni/fetchRadni', async () => {\n  const { data, error } = await supabase\n    .from('radni')\n    .select('*');\n\n  if (error) {\n    throw error;\n  }\n  \n  return data;\n});\n\nconst radniSlice = createSlice({\n  name: 'radni',\n  initialState: {\n    radni: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRadni.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchRadni.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.radni = action.payload;\n      })\n      .addCase(fetchRadni.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default radniSlice.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,sBAAsB;AAE/C,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAM;IAAEG,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACnCI,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC;EAEd,IAAIF,KAAK,EAAE;IACT,MAAMA,KAAK;EACb;EAEA,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,MAAMI,UAAU,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACT,CAAC;EACDQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACb,UAAU,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACb,UAAU,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACf,KAAK,CAACkB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}