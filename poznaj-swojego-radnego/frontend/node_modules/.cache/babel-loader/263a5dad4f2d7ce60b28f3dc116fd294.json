{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { DEFAULT_HEADERS } from './constants';\nimport { get, post, put, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nexport class StorageBucketApi {\n  constructor(url, headers = {}, fetch) {\n    this.url = url;\n    this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n    this.fetch = resolveFetch(fetch);\n  }\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  listBuckets() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield get(this.fetch, `${this.url}/bucket`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  getBucket(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield get(this.fetch, `${this.url}/bucket/${id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @returns newly created bucket id\n   */\n  createBucket(id, options = {\n    public: false\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield post(this.fetch, `${this.url}/bucket`, {\n          id,\n          name: id,\n          public: options.public\n        }, {\n          headers: this.headers\n        });\n        return {\n          data: data.name,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n  /**\n   * Updates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   */\n  updateBucket(id, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n          id,\n          name: id,\n          public: options.public\n        }, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  emptyBucket(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  deleteBucket(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        return {\n          data: null,\n          error\n        };\n      }\n    });\n  }\n}","map":{"version":3,"names":["DEFAULT_HEADERS","get","post","put","remove","resolveFetch","StorageBucketApi","constructor","url","headers","fetch","Object","assign","listBuckets","data","error","getBucket","id","createBucket","options","public","name","updateBucket","emptyBucket","deleteBucket"],"sources":["../../../src/lib/StorageBucketApi.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}