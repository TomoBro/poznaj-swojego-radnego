{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n  schema: 'public',\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.headers Any additional headers to send with each network request.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(supabaseUrl, supabaseKey, options) {\n    this.supabaseUrl = supabaseUrl;\n    this.supabaseKey = supabaseKey;\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.');\n    if (!supabaseKey) throw new Error('supabaseKey is required.');\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n    const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.restUrl = `${_supabaseUrl}/rest/v1`;\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n    this.authUrl = `${_supabaseUrl}/auth/v1`;\n    this.storageUrl = `${_supabaseUrl}/storage/v1`;\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.');\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n    }\n    this.schema = settings.schema;\n    this.multiTab = settings.multiTab;\n    this.fetch = settings.fetch;\n    this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n    this.shouldThrowOnError = settings.shouldThrowOnError || false;\n    this.auth = this._initSupabaseAuthClient(settings);\n    this.realtime = this._initRealtimeClient(Object.assign({\n      headers: this.headers\n    }, settings.realtime));\n    this._listenForAuthEvents();\n    this._listenForMultiTabEvents();\n    // In the future we might allow the user to pass in a logger to receive these events.\n    // this.realtime.onOpen(() => console.log('OPEN'))\n    // this.realtime.onClose(() => console.log('CLOSED'))\n    // this.realtime.onError((e: Error) => console.log('Socket error', e))\n  }\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this._getAuthHeaders(),\n      customFetch: this.fetch\n    });\n  }\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n  }\n  /**\n   * Perform a table operation.\n   *\n   * @param table The table name to operate on.\n   */\n  from(table) {\n    const url = `${this.restUrl}/${table}`;\n    return new SupabaseQueryBuilder(url, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      realtime: this.realtime,\n      table,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError\n    });\n  }\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param params  The parameters to pass to the function call.\n   * @param head   When set to true, no data will be returned.\n   * @param count  Count algorithm to use to count rows in a table.\n   *\n   */\n  rpc(fn, params, {\n    head = false,\n    count = null\n  } = {}) {\n    const rest = this._initPostgRESTClient();\n    return rest.rpc(fn, params, {\n      head,\n      count\n    });\n  }\n  /**\n   * Closes and removes all subscriptions and returns a list of removed\n   * subscriptions and their errors.\n   */\n  removeAllSubscriptions() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const allSubs = this.getSubscriptions().slice();\n      const allSubPromises = allSubs.map(sub => this.removeSubscription(sub));\n      const allRemovedSubs = yield Promise.all(allSubPromises);\n      return allRemovedSubs.map(({\n        error\n      }, i) => {\n        return {\n          data: {\n            subscription: allSubs[i]\n          },\n          error\n        };\n      });\n    });\n  }\n  /**\n   * Closes and removes a subscription and returns the number of open subscriptions.\n   *\n   * @param subscription The subscription you want to close and remove.\n   */\n  removeSubscription(subscription) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        error\n      } = yield this._closeSubscription(subscription);\n      const allSubs = this.getSubscriptions();\n      const openSubCount = allSubs.filter(chan => chan.isJoined()).length;\n      if (allSubs.length === 0) yield this.realtime.disconnect();\n      return {\n        data: {\n          openSubscriptions: openSubCount\n        },\n        error\n      };\n    });\n  }\n  _closeSubscription(subscription) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let error = null;\n      if (!subscription.isClosed()) {\n        const {\n          error: unsubError\n        } = yield this._unsubscribeSubscription(subscription);\n        error = unsubError;\n      }\n      this.realtime.remove(subscription);\n      return {\n        error\n      };\n    });\n  }\n  _unsubscribeSubscription(subscription) {\n    return new Promise(resolve => {\n      subscription.unsubscribe().receive('ok', () => resolve({\n        error: null\n      })).receive('error', error => resolve({\n        error\n      })).receive('timeout', () => resolve({\n        error: new Error('timed out')\n      }));\n    });\n  }\n  /**\n   * Returns an array of all your subscriptions.\n   */\n  getSubscriptions() {\n    return this.realtime.channels;\n  }\n  _initSupabaseAuthClient({\n    autoRefreshToken,\n    persistSession,\n    detectSessionInUrl,\n    localStorage,\n    headers,\n    fetch,\n    cookieOptions,\n    multiTab\n  }) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`\n    };\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: Object.assign(Object.assign({}, headers), authHeaders),\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      localStorage,\n      fetch,\n      cookieOptions,\n      multiTab\n    });\n  }\n  _initRealtimeClient(options) {\n    return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), {\n      params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), {\n        apikey: this.supabaseKey\n      })\n    }));\n  }\n  _initPostgRESTClient() {\n    return new PostgrestClient(this.restUrl, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      fetch: this.fetch,\n      throwOnError: this.shouldThrowOnError\n    });\n  }\n  _getAuthHeaders() {\n    var _a, _b;\n    const headers = Object.assign({}, this.headers);\n    const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n    headers['apikey'] = this.supabaseKey;\n    headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`;\n    return headers;\n  }\n  _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n      return null;\n    }\n    try {\n      return window === null || window === void 0 ? void 0 : window.addEventListener('storage', e => {\n        var _a, _b, _c;\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue));\n          const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n          const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n          if (!accessToken) {\n            this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n          } else if (!previousAccessToken && accessToken) {\n            this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n          } else if (previousAccessToken !== accessToken) {\n            this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n          }\n        }\n      });\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error);\n      return null;\n    }\n  }\n  _listenForAuthEvents() {\n    let {\n      data\n    } = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n    });\n    return data;\n  }\n  _handleTokenChanged(event, token, source) {\n    if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n      // Token has changed\n      this.realtime.setAuth(token);\n      // Ideally we should call this.auth.recoverSession() - need to make public\n      // to trigger a \"SIGNED_IN\" event on this client.\n      if (source == 'STORAGE') this.auth.setAuth(token);\n      this.changedAccessToken = token;\n    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey);\n      if (source == 'STORAGE') this.auth.signOut();\n    }\n  }\n}","map":{"version":3,"names":["DEFAULT_HEADERS","STORAGE_KEY","stripTrailingSlash","isBrowser","SupabaseAuthClient","SupabaseQueryBuilder","SupabaseStorageClient","FunctionsClient","PostgrestClient","RealtimeClient","DEFAULT_OPTIONS","schema","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","headers","SupabaseClient","constructor","supabaseUrl","supabaseKey","options","Error","_supabaseUrl","settings","Object","assign","restUrl","realtimeUrl","replace","authUrl","storageUrl","isPlatform","match","urlParts","split","functionsUrl","fetch","shouldThrowOnError","auth","_initSupabaseAuthClient","realtime","_initRealtimeClient","_listenForAuthEvents","_listenForMultiTabEvents","functions","_getAuthHeaders","customFetch","storage","from","table","url","rpc","fn","params","head","count","rest","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","slice","allSubPromises","map","sub","removeSubscription","allRemovedSubs","Promise","all","error","i","data","subscription","_closeSubscription","openSubCount","filter","chan","isJoined","length","disconnect","openSubscriptions","isClosed","unsubError","_unsubscribeSubscription","remove","resolve","unsubscribe","receive","channels","localStorage","cookieOptions","authHeaders","Authorization","apikey","throwOnError","authBearer","_b","_a","session","access_token","window","addEventListener","e","key","newSession","JSON","parse","String","newValue","accessToken","currentSession","undefined","previousAccessToken","_c","_handleTokenChanged","console","onAuthStateChange","event","token","source","changedAccessToken","setAuth","signOut"],"sources":["../../src/SupabaseClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}