{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { supabase } from '../../supabaseClient';\nconst initialState = {\n  radni: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchRadni = createAsyncThunk('radni/fetchRadni', async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('radni').select('*');\n  if (error) throw Error(error.message);\n  return data;\n});\nconst radniSlice = createSlice({\n  name: 'radni',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRadni.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchRadni.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.radni = action.payload;\n    }).addCase(fetchRadni.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default radniSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","supabase","initialState","radni","status","error","fetchRadni","data","from","select","Error","message","radniSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/tomek/Documents/Poznaj_swojego_radnego/poznaj-swojego-radnego/frontend/src/features/radni/radniSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { supabase } from '../../supabaseClient';\n\nconst initialState = {\n  radni: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const fetchRadni = createAsyncThunk('radni/fetchRadni', async () => {\n  const { data, error } = await supabase.from('radni').select('*');\n  if (error) throw Error(error.message);\n  return data;\n});\n\nconst radniSlice = createSlice({\n  name: 'radni',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRadni.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchRadni.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.radni = action.payload;\n      })\n      .addCase(fetchRadni.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default radniSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,sBAAsB;AAE/C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAM;IAAEO,IAAI;IAAEF;EAAM,CAAC,GAAG,MAAMJ,QAAQ,CAACO,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;EAChE,IAAIJ,KAAK,EAAE,MAAMK,KAAK,CAACL,KAAK,CAACM,OAAO,CAAC;EACrC,OAAOJ,IAAI;AACb,CAAC,CAAC;AAEF,MAAMK,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,UAAU,CAACY,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACf,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDa,OAAO,CAACX,UAAU,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACf,MAAM,GAAG,WAAW;MAC1Be,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACX,UAAU,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACf,MAAM,GAAG,QAAQ;MACvBe,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAAChB,KAAK,CAACM,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,UAAU,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}