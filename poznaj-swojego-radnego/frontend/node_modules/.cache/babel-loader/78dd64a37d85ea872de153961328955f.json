{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid, setItemAsync, removeItemAsync, getItemSynchronously, getItemAsync } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY, EXPIRY_MARGIN, NETWORK_FAILURE } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS\n};\nconst decodeBase64URL = value => {\n  try {\n    // atob is present in all browsers and nodejs >= 16\n    // but if it is not it will throw a ReferenceError in which case we can try to use Buffer\n    // replace are here to convert the Base64-URL into Base64 which is what atob supports\n    // replace with //g regex acts like replaceAll\n    return atob(value.replace(/[-]/g, '+').replace(/[_]/g, '/'));\n  } catch (e) {\n    if (e instanceof ReferenceError) {\n      // running on nodejs < 16\n      // Buffer supports Base64-URL transparently\n      return Buffer.from(value, 'base64').toString('utf-8');\n    } else {\n      throw e;\n    }\n  }\n};\nexport default class GoTrueClient {\n  /**\n   * Create a new client for use in the browser.\n   * @param options.url The URL of the GoTrue server.\n   * @param options.headers Any additional headers to send to the GoTrue server.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.cookieOptions\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(options) {\n    this.stateChangeEmitters = new Map();\n    this.networkRetries = 0;\n    const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.currentUser = null;\n    this.currentSession = null;\n    this.autoRefreshToken = settings.autoRefreshToken;\n    this.persistSession = settings.persistSession;\n    this.multiTab = settings.multiTab;\n    this.localStorage = settings.localStorage || globalThis.localStorage;\n    this.api = new GoTrueApi({\n      url: settings.url,\n      headers: settings.headers,\n      cookieOptions: settings.cookieOptions,\n      fetch: settings.fetch\n    });\n    this._recoverSession();\n    this._recoverAndRefresh();\n    this._listenForMultiTabEvents();\n    this._handleVisibilityChange();\n    if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n      // Handle the OAuth redirect\n      this.getSessionFromUrl({\n        storeSession: true\n      }).then(({\n        error\n      }) => {\n        if (error) {\n          throw new Error('Error getting session from URL.');\n        }\n      });\n    }\n  }\n  /**\n   * Creates a new user.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param phone The user's phone number.\n   * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n   * @param data Optional user metadata.\n   */\n  signUp({\n    email,\n    password,\n    phone\n  }, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this._removeSession();\n        const {\n          data,\n          error\n        } = phone && password ? yield this.api.signUpWithPhone(phone, password, {\n          data: options.data,\n          captchaToken: options.captchaToken\n        }) : yield this.api.signUpWithEmail(email, password, {\n          redirectTo: options.redirectTo,\n          data: options.data,\n          captchaToken: options.captchaToken\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw 'An error occurred on sign up.';\n        }\n        let session = null;\n        let user = null;\n        if (data.access_token) {\n          session = data;\n          user = session.user;\n          this._saveSession(session);\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n        if (data.id) {\n          user = data;\n        }\n        return {\n          user,\n          session,\n          error: null\n        };\n      } catch (e) {\n        return {\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    });\n  }\n  /**\n   * Log in an existing user, or login via a third-party provider.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param password The user's password.\n   * @param refreshToken A valid refresh token that was returned on login.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  signIn({\n    email,\n    phone,\n    password,\n    refreshToken,\n    provider,\n    oidc\n  }, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this._removeSession();\n        if (email && !password) {\n          const {\n            error\n          } = yield this.api.sendMagicLinkEmail(email, {\n            redirectTo: options.redirectTo,\n            shouldCreateUser: options.shouldCreateUser,\n            captchaToken: options.captchaToken\n          });\n          return {\n            user: null,\n            session: null,\n            error\n          };\n        }\n        if (email && password) {\n          return this._handleEmailSignIn(email, password, {\n            redirectTo: options.redirectTo,\n            captchaToken: options.captchaToken\n          });\n        }\n        if (phone && !password) {\n          const {\n            error\n          } = yield this.api.sendMobileOTP(phone, {\n            shouldCreateUser: options.shouldCreateUser,\n            captchaToken: options.captchaToken\n          });\n          return {\n            user: null,\n            session: null,\n            error\n          };\n        }\n        if (phone && password) {\n          return this._handlePhoneSignIn(phone, password);\n        }\n        if (refreshToken) {\n          // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n          const {\n            error\n          } = yield this._callRefreshToken(refreshToken);\n          if (error) throw error;\n          return {\n            user: this.currentUser,\n            session: this.currentSession,\n            error: null\n          };\n        }\n        if (provider) {\n          return this._handleProviderSignIn(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n        }\n        if (oidc) {\n          return this._handleOpenIDConnectSignIn(oidc);\n        }\n        throw new Error(`You must provide either an email, phone number, a third-party provider or OpenID Connect.`);\n      } catch (e) {\n        return {\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    });\n  }\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param token The user's password.\n   * @param type The user's verification type.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  verifyOTP(params, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this._removeSession();\n        const {\n          data,\n          error\n        } = yield this.api.verifyOTP(params, options);\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw 'An error occurred on token verification.';\n        }\n        let session = null;\n        let user = null;\n        if (data.access_token) {\n          session = data;\n          user = session.user;\n          this._saveSession(session);\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n        if (data.id) {\n          user = data;\n        }\n        return {\n          user,\n          session,\n          error: null\n        };\n      } catch (e) {\n        return {\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    });\n  }\n  /**\n   * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n   *\n   * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n   */\n  user() {\n    return this.currentUser;\n  }\n  /**\n   * Returns the session data, if there is an active session.\n   */\n  session() {\n    return this.currentSession;\n  }\n  /**\n   * Force refreshes the session including the user data in case it was updated in a different session.\n   */\n  refreshSession() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token)) throw new Error('Not logged in.');\n        // currentSession and currentUser will be updated to latest on _callRefreshToken\n        const {\n          error\n        } = yield this._callRefreshToken();\n        if (error) throw error;\n        return {\n          data: this.currentSession,\n          user: this.currentUser,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          user: null,\n          error: e\n        };\n      }\n    });\n  }\n  /**\n   * Updates user data, if there is a logged in user.\n   */\n  update(attributes) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token)) throw new Error('Not logged in.');\n        const {\n          user,\n          error\n        } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n        if (error) throw error;\n        if (!user) throw Error('Invalid user data.');\n        const session = Object.assign(Object.assign({}, this.currentSession), {\n          user\n        });\n        this._saveSession(session);\n        this._notifyAllSubscribers('USER_UPDATED');\n        return {\n          data: user,\n          user,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          user: null,\n          error: e\n        };\n      }\n    });\n  }\n  setSession(arg0) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let session;\n      if (typeof arg0 === 'string') {\n        // using the refresh_token string API\n        const refresh_token = arg0;\n        const {\n          data,\n          error\n        } = yield this.api.refreshAccessToken(refresh_token);\n        if (error) {\n          return {\n            session: null,\n            error: error\n          };\n        }\n        session = data;\n      } else {\n        // using the object parameter API\n        const timeNow = Math.round(Date.now() / 1000);\n        let {\n          refresh_token,\n          access_token\n        } = arg0;\n        let expires_at = 0;\n        let expires_in = 0;\n        const tokenParts = access_token.split('.');\n        if (tokenParts.length !== 3) throw new Error('access_token is not a proper JWT');\n        const bodyJSON = decodeBase64URL(tokenParts[1]);\n        let parsed = undefined;\n        try {\n          parsed = JSON.parse(bodyJSON);\n        } catch (e) {\n          throw new Error('access_token is not a proper JWT, invalid JSON in body');\n        }\n        if (typeof parsed === 'object' && parsed && typeof parsed.exp === 'number') {\n          expires_at = parsed.exp;\n          expires_in = timeNow - parsed.exp;\n        } else {\n          throw new Error('access_token is not a proper JWT, missing exp claim');\n        }\n        if (timeNow > expires_at) {\n          const {\n            data,\n            error\n          } = yield this.api.refreshAccessToken(refresh_token);\n          if (error) {\n            return {\n              session: null,\n              error: error\n            };\n          }\n          session = data;\n        } else {\n          const {\n            user,\n            error\n          } = yield this.api.getUser(access_token);\n          if (error) throw error;\n          session = {\n            access_token,\n            expires_in,\n            expires_at,\n            refresh_token,\n            token_type: 'bearer',\n            user: user\n          };\n        }\n      }\n      try {\n        this._saveSession(session);\n        this._notifyAllSubscribers('SIGNED_IN');\n        return {\n          session,\n          error: null\n        };\n      } catch (e) {\n        return {\n          error: e,\n          session: null\n        };\n      }\n    });\n  }\n  /**\n   * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n   * @param access_token a jwt access token\n   */\n  setAuth(access_token) {\n    this.currentSession = Object.assign(Object.assign({}, this.currentSession), {\n      access_token,\n      token_type: 'bearer',\n      user: this.user()\n    });\n    this._notifyAllSubscribers('TOKEN_REFRESHED');\n    return this.currentSession;\n  }\n  /**\n   * Gets the session data from a URL string\n   * @param options.storeSession Optionally store the session in the browser\n   */\n  getSessionFromUrl(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!isBrowser()) throw new Error('No browser detected.');\n        const error_description = getParameterByName('error_description');\n        if (error_description) throw new Error(error_description);\n        const provider_token = getParameterByName('provider_token');\n        const provider_refresh_token = getParameterByName('provider_refresh_token');\n        const access_token = getParameterByName('access_token');\n        if (!access_token) throw new Error('No access_token detected.');\n        const expires_in = getParameterByName('expires_in');\n        if (!expires_in) throw new Error('No expires_in detected.');\n        const refresh_token = getParameterByName('refresh_token');\n        if (!refresh_token) throw new Error('No refresh_token detected.');\n        const token_type = getParameterByName('token_type');\n        if (!token_type) throw new Error('No token_type detected.');\n        const timeNow = Math.round(Date.now() / 1000);\n        const expires_at = timeNow + parseInt(expires_in);\n        const {\n          user,\n          error\n        } = yield this.api.getUser(access_token);\n        if (error) throw error;\n        const session = {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          expires_in: parseInt(expires_in),\n          expires_at,\n          refresh_token,\n          token_type,\n          user: user\n        };\n        if (options === null || options === void 0 ? void 0 : options.storeSession) {\n          this._saveSession(session);\n          const recoveryMode = getParameterByName('type');\n          this._notifyAllSubscribers('SIGNED_IN');\n          if (recoveryMode === 'recovery') {\n            this._notifyAllSubscribers('PASSWORD_RECOVERY');\n          }\n        }\n        // Remove tokens from URL\n        window.location.hash = '';\n        return {\n          data: session,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          error: e\n        };\n      }\n    });\n  }\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`. There is no way to revoke a user's session JWT before it automatically expires\n   */\n  signOut() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n      this._removeSession();\n      this._notifyAllSubscribers('SIGNED_OUT');\n      if (accessToken) {\n        const {\n          error\n        } = yield this.api.signOut(accessToken);\n        if (error) return {\n          error\n        };\n      }\n      return {\n        error: null\n      };\n    });\n  }\n  /**\n   * Receive a notification every time an auth event happens.\n   * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n   */\n  onAuthStateChange(callback) {\n    try {\n      const id = uuid();\n      const subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this.stateChangeEmitters.delete(id);\n        }\n      };\n      this.stateChangeEmitters.set(id, subscription);\n      return {\n        data: subscription,\n        error: null\n      };\n    } catch (e) {\n      return {\n        data: null,\n        error: e\n      };\n    }\n  }\n  _handleEmailSignIn(email, password, options = {}) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield this.api.signInWithEmail(email, password, {\n          redirectTo: options.redirectTo,\n          captchaToken: options.captchaToken\n        });\n        if (error || !data) return {\n          data: null,\n          user: null,\n          session: null,\n          error\n        };\n        if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n          this._saveSession(data);\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n        return {\n          data,\n          user: data.user,\n          session: data,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    });\n  }\n  _handlePhoneSignIn(phone, password, options = {}) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield this.api.signInWithPhone(phone, password, options);\n        if (error || !data) return {\n          data: null,\n          user: null,\n          session: null,\n          error\n        };\n        if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n          this._saveSession(data);\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n        return {\n          data,\n          user: data.user,\n          session: data,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    });\n  }\n  _handleProviderSignIn(provider, options = {}) {\n    const url = this.api.getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams\n    });\n    try {\n      // try to open on the browser\n      if (isBrowser()) {\n        window.location.href = url;\n      }\n      return {\n        provider,\n        url,\n        data: null,\n        session: null,\n        user: null,\n        error: null\n      };\n    } catch (e) {\n      // fallback to returning the URL\n      if (url) return {\n        provider,\n        url,\n        data: null,\n        session: null,\n        user: null,\n        error: null\n      };\n      return {\n        data: null,\n        user: null,\n        session: null,\n        error: e\n      };\n    }\n  }\n  _handleOpenIDConnectSignIn({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (id_token && nonce && (client_id && issuer || provider)) {\n        try {\n          const {\n            data,\n            error\n          } = yield this.api.signInWithOpenIDConnect({\n            id_token,\n            nonce,\n            client_id,\n            issuer,\n            provider\n          });\n          if (error || !data) return {\n            user: null,\n            session: null,\n            error\n          };\n          this._saveSession(data);\n          this._notifyAllSubscribers('SIGNED_IN');\n          return {\n            user: data.user,\n            session: data,\n            error: null\n          };\n        } catch (e) {\n          return {\n            user: null,\n            session: null,\n            error: e\n          };\n        }\n      }\n      throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`);\n    });\n  }\n  /**\n   * Attempts to get the session from LocalStorage\n   * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n   */\n  _recoverSession() {\n    try {\n      const data = getItemSynchronously(this.localStorage, STORAGE_KEY);\n      if (!data) return null;\n      const {\n        currentSession,\n        expiresAt\n      } = data;\n      const timeNow = Math.round(Date.now() / 1000);\n      if (expiresAt >= timeNow + EXPIRY_MARGIN && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n        this._saveSession(currentSession);\n        this._notifyAllSubscribers('SIGNED_IN');\n      }\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  _recoverAndRefresh() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield getItemAsync(this.localStorage, STORAGE_KEY);\n        if (!data) return null;\n        const {\n          currentSession,\n          expiresAt\n        } = data;\n        const timeNow = Math.round(Date.now() / 1000);\n        if (expiresAt < timeNow + EXPIRY_MARGIN) {\n          if (this.autoRefreshToken && currentSession.refresh_token) {\n            this.networkRetries++;\n            const {\n              error\n            } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n              console.log(error.message);\n              if (error.message === NETWORK_FAILURE.ERROR_MESSAGE && this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) {\n                if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n                this.refreshTokenTimer = setTimeout(() => this._recoverAndRefresh(), Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100 // exponential backoff\n                );\n                return;\n              }\n              yield this._removeSession();\n            }\n            this.networkRetries = 0;\n          } else {\n            this._removeSession();\n          }\n        } else if (!currentSession) {\n          console.log('Current session is missing data.');\n          this._removeSession();\n        } else {\n          // should be handled on _recoverSession method already\n          // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n          this._saveSession(currentSession);\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n      } catch (err) {\n        console.error(err);\n        return null;\n      }\n    });\n  }\n  _callRefreshToken(refresh_token) {\n    var _a;\n    if (refresh_token === void 0) {\n      refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token;\n    }\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!refresh_token) {\n          throw new Error('No current session.');\n        }\n        const {\n          data,\n          error\n        } = yield this.api.refreshAccessToken(refresh_token);\n        if (error) throw error;\n        if (!data) throw Error('Invalid session data.');\n        this._saveSession(data);\n        this._notifyAllSubscribers('TOKEN_REFRESHED');\n        this._notifyAllSubscribers('SIGNED_IN');\n        return {\n          data,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          error: e\n        };\n      }\n    });\n  }\n  _notifyAllSubscribers(event) {\n    this.stateChangeEmitters.forEach(x => x.callback(event, this.currentSession));\n  }\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  _saveSession(session) {\n    this.currentSession = session;\n    this.currentUser = session.user;\n    const expiresAt = session.expires_at;\n    if (expiresAt) {\n      const timeNow = Math.round(Date.now() / 1000);\n      const expiresIn = expiresAt - timeNow;\n      const refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5;\n      this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n    }\n    // Do we need any extra check before persist session\n    // access_token or user ?\n    if (this.persistSession && session.expires_at) {\n      this._persistSession(this.currentSession);\n    }\n  }\n  _persistSession(currentSession) {\n    const data = {\n      currentSession,\n      expiresAt: currentSession.expires_at\n    };\n    setItemAsync(this.localStorage, STORAGE_KEY, data);\n  }\n  _removeSession() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.currentSession = null;\n      this.currentUser = null;\n      if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n      removeItemAsync(this.localStorage, STORAGE_KEY);\n    });\n  }\n  /**\n   * Clear and re-create refresh token timer\n   * @param value time intervals in milliseconds\n   */\n  _startAutoRefreshToken(value) {\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n    if (value <= 0 || !this.autoRefreshToken) return;\n    this.refreshTokenTimer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n      this.networkRetries++;\n      const {\n        error\n      } = yield this._callRefreshToken();\n      if (!error) this.networkRetries = 0;\n      if ((error === null || error === void 0 ? void 0 : error.message) === NETWORK_FAILURE.ERROR_MESSAGE && this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) this._startAutoRefreshToken(Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100); // exponential backoff\n    }), value);\n    if (typeof this.refreshTokenTimer.unref === 'function') this.refreshTokenTimer.unref();\n  }\n  /**\n   * Listens for changes to LocalStorage and updates the current session.\n   */\n  _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n      return false;\n    }\n    try {\n      window === null || window === void 0 ? void 0 : window.addEventListener('storage', e => {\n        var _a;\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue));\n          if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n            this._saveSession(newSession.currentSession);\n            this._notifyAllSubscribers('SIGNED_IN');\n          } else {\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n          }\n        }\n      });\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error);\n    }\n  }\n  _handleVisibilityChange() {\n    if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n      return false;\n    }\n    try {\n      window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n          this._recoverAndRefresh();\n        }\n      });\n    } catch (error) {\n      console.error('_handleVisibilityChange', error);\n    }\n  }\n}","map":{"version":3,"names":["GoTrueApi","isBrowser","getParameterByName","uuid","setItemAsync","removeItemAsync","getItemSynchronously","getItemAsync","GOTRUE_URL","DEFAULT_HEADERS","STORAGE_KEY","EXPIRY_MARGIN","NETWORK_FAILURE","polyfillGlobalThis","DEFAULT_OPTIONS","url","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","headers","decodeBase64URL","value","atob","replace","e","ReferenceError","Buffer","from","toString","GoTrueClient","constructor","options","stateChangeEmitters","Map","networkRetries","settings","Object","assign","currentUser","currentSession","localStorage","globalThis","api","cookieOptions","fetch","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","_handleVisibilityChange","getSessionFromUrl","storeSession","then","error","Error","signUp","email","password","phone","_removeSession","data","signUpWithPhone","captchaToken","signUpWithEmail","redirectTo","session","user","access_token","_saveSession","_notifyAllSubscribers","id","signIn","refreshToken","provider","oidc","sendMagicLinkEmail","shouldCreateUser","_handleEmailSignIn","sendMobileOTP","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","scopes","queryParams","_handleOpenIDConnectSignIn","verifyOTP","params","refreshSession","_a","update","attributes","updateUser","setSession","arg0","refresh_token","refreshAccessToken","timeNow","Math","round","Date","now","expires_at","expires_in","tokenParts","split","length","bodyJSON","parsed","undefined","JSON","parse","exp","getUser","token_type","setAuth","error_description","provider_token","provider_refresh_token","parseInt","recoveryMode","window","location","hash","signOut","accessToken","onAuthStateChange","callback","subscription","unsubscribe","delete","set","signInWithEmail","confirmed_at","_b","email_confirmed_at","signInWithPhone","phone_confirmed_at","getUrlForProvider","href","id_token","nonce","client_id","issuer","signInWithOpenIDConnect","expiresAt","console","log","message","ERROR_MESSAGE","MAX_RETRIES","refreshTokenTimer","clearTimeout","setTimeout","pow","RETRY_INTERVAL","err","event","forEach","x","expiresIn","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","__awaiter","unref","addEventListener","key","newSession","String","newValue","document","visibilityState"],"sources":["../../src/GoTrueClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}